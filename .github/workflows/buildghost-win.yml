name: Build ghost win

on:
  push:
    tags:
      - '*-release'

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]
        arch: [32, 64]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          # env for windows to install pycrypto; MSVC version may change
          CL: /FI"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.24.28314\\INCLUDE\\stdint.h"
      # using https://github.com/InVisionApp/private-action-loader for private repo.

      - name: Checkout Beamify
        uses: actions/checkout@v3
        with:
          repository: flux3dp/beamify
          ref: 2.0.5
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/beamify

      - name: Install Beamify
        uses: ./.github/actions/beamify

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@2.7.7

      - name: Checkout FluxClient
        uses: actions/checkout@v3
        with:
          repository: flux3dp/fluxclient-dev
          ref: 2.8.7
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/fluxclient

      - name: Install FluxClient
        uses: ./.github/actions/fluxclient

      - name: Build Flux Api
        run: |
          if ("${{ matrix.arch }}" -eq "32") {
            cp ./lib/x32/* C:\Windows\System32
          } else {
            cp ./lib/x64/* C:\Windows\System32
          }
          sh -c "set -e 1; python ghost.py --test"
          sh -c "set -e 1; pyinstaller --clean ghost-github-action.spec"
          ./dist/flux_api/flux_api --test

      - name: Cleanup artifacts
        run: |
          mkdir artifacts
          mv dist/flux_api artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win-x${{matrix.arch}}
          path: artifacts
